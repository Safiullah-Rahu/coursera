package week_3.fractional_knapsack;

import java.util.Arrays;
import java.util.Scanner;

import javax.naming.ldap.SortControl;

public class FractionalKnapsack {
    private static Scanner scanner;

    private static double getOptimalValue(int capacity, int[] values, int[] weights) {
        double value = 0;
        
        int n = values.length;
        int[] vBw = new int[n];
        
        for (int i = 0; i < n; i++) {
            vBw[i] = values[i]/weights[i];
        }
        
        Arrays.sort(vBw);

        return value;
    }

    public static void main(String args[]) {
        scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int capacity = scanner.nextInt();
        int[] values = new int[n];
        int[] weights = new int[n];
        for (int i = 0; i < n; i++) {
            values[i] = scanner.nextInt();
            weights[i] = scanner.nextInt();
        }
        System.out.println(getOptimalValue(capacity, values, weights));
    }
} 
